CREATE TABLE PO_MAS_MOFA
(
MOF_ID INTEGER NOT NULL ,
RULE_DESCRIPTION CHARACTER VARYING(64) NULL,
AMOUNT_RANGE_FROM INTEGER NULL,
AMOUNT_RANGE_TO INTEGER NULL,
ROLE_CODE CHARACTER VARYING(128) NULL,
RULE_CODE CHARACTER VARYING(32) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_PO_MAS_MOFA
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE PO_MAS_MOFA
 ALTER COLUMN MOF_ID  SET DEFAULT nextval('SEQ_PO_MAS_MOFA');


CREATE OR REPLACE FUNCTION TRG_PO_MAS_MOFA()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_PO_MAS_MOFA=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE PO_MAS_MOFA ADD CONSTRAINT PO_MAS_MOFA_pkey primary key(MOF_ID);

 CREATE TRIGGER TRG_HST_PO_MAS_MOFA
 AFTER INSERT Or UPDATE 
 ON PO_MAS_MOFA
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE PO_MAS_MOFA  ENABLE TRIGGER TRG_HST_PO_MAS_MOFA ;
